async function getServerTimeAsync() {
    try {
        const response = await fetch(window.location.href, {
            method: 'HEAD'
        });

        const dateHeader = response.headers.get("Date");

        if (!dateHeader) {
            throw new Error("Date header not found");
        }

        return new Date(dateHeader).getTime(); // Tr·∫£ v·ªÅ timestamp (milliseconds)
    } catch (error) {
        console.error("Failed to get server time:", error);
        return null; // ho·∫∑c b·∫°n c√≥ th·ªÉ tr·∫£ v·ªÅ Date.now() nh∆∞ fallback
    }
}

cc.Class({
    extends: cc.Component,

    properties: {
        timeLabel: cc.Label,
    },

    onLoad() {
        this.updateServerTime();
    },

    async updateServerTime() {
        const serverTime = await getServerTimeAsync();
        if (serverTime) {
            const timeStr = new Date(serverTime).toLocaleString();
            this.timeLabel.string = "üïí Server Time: " + timeStr;
        } else {
            this.timeLabel.string = "‚ùå Kh√¥ng th·ªÉ l·∫•y gi·ªù t·ª´ server.";
        }
    }
});

// cc.Class({
//     extends: cc.Component,

//     properties: {
//         label: cc.Label, // g√°n label t·ª´ Editor ƒë·ªÉ hi·ªÉn th·ªã k·∫øt qu·∫£
//     },

//     // H√†m n√†y ch·∫°y khi node ƒë∆∞·ª£c kh·ªüi t·∫°o
//     async start() {
//         try {
//             const time = await this.getServerTime(); // G·ªçi h√†m b·∫•t ƒë·ªìng b·ªô
//             this.label.string = 'Server Time (ms): ' + time; // Hi·ªÉn th·ªã th·ªùi gian server
//         } catch (e) {
//             this.label.string = 'L·ªói: ' + e.message;
//         }
//     },

//     // H√†m b·∫•t ƒë·ªìng b·ªô l·∫•y th·ªùi gian t·ª´ server
//     async getServerTime() {
//         return new Promise((resolve, reject) => {
//             let xmlHttp;
//             try {
//                 xmlHttp = new XMLHttpRequest(); // T·∫°o XMLHttpRequest
//                 xmlHttp.open('HEAD', window.location.href.toString(), true); // G·ª≠i request d·∫°ng HEAD
//                 xmlHttp.setRequestHeader('Content-Type', 'text/html');

//                 // Khi request xong
//                 xmlHttp.onreadystatechange = function () {
//                     if (xmlHttp.readyState === 4) {
//                         if (xmlHttp.status === 200) {
//                             const date = xmlHttp.getResponseHeader("Date");
//                             resolve(new Date(date).getTime()); // Tr·∫£ v·ªÅ th·ªùi gian
//                         } else {
//                             reject(new Error("Kh√¥ng l·∫•y ƒë∆∞·ª£c th·ªùi gian t·ª´ server"));
//                         }
//                     }
//                 };

//                 xmlHttp.send(null); // G·ª≠i request
//             } catch (err) {
//                 reject(err); // B√°o l·ªói n·∫øu kh√¥ng h·ªó tr·ª£ XMLHttpRequest
//             }
//         });
//     }
// });
