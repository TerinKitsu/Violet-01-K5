{"version":3,"sources":["D5_Bai8.js"],"names":["asyncFunc1","callback","setTimeout","asyncFunc2","asyncFunc3","asyncParallel","funcArray","finalCallback","results","completedCount","forEach","func","index","result","length","console","log"],"mappings":";;;;;;AAAA;AACA,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AAC1BC,eAAW,YAAM;AACbD,iBAAS,CAAT;AACH,KAFD,EAEG,IAFH;AAGH;;AAED,SAASE,UAAT,CAAoBF,QAApB,EAA8B;AAC1BC,eAAW,YAAM;AACbD,iBAAS,CAAT;AACH,KAFD,EAEG,IAFH;AAGH;;AAED,SAASG,UAAT,CAAoBH,QAApB,EAA8B;AAC1BC,eAAW,YAAM;AACbD,iBAAS,CAAT;AACH,KAFD,EAEG,IAFH;AAGH;;AAED,SAASI,aAAT,CAAuBC,SAAvB,EAAkCC,aAAlC,EAAiD;AAC7C,QAAMC,UAAU,EAAhB;AACA,QAAIC,iBAAiB,CAArB;;AAEAH,cAAUI,OAAV,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/BD,aAAK,UAACE,MAAD,EAAY;AACbL,oBAAQI,KAAR,IAAiBC,MAAjB,CADa,CACY;AACzBJ;;AAEA,gBAAIA,mBAAmBH,UAAUQ,MAAjC,EAAyC;AACrCP,8BAAcC,OAAd,EADqC,CACb;AAC3B;AACJ,SAPD;AAQH,KATD;AAUH;;AAEDH,cAAc,CAACL,UAAD,EAAaG,UAAb,EAAyBC,UAAzB,CAAd,EAAoD,UAACS,MAAD,EAAY;AAC5DE,YAAQC,GAAR,CAAYH,MAAZ;AACA;AACC,CAHL","file":"D5_Bai8.js","sourceRoot":"../../../../assets/Day5","sourcesContent":["//Bất đồng bộ về gán thứ tự hàm làm song song nhau và trả về cùng một thời điểm\nfunction asyncFunc1(callback) {\n    setTimeout(() => {\n        callback(1);\n    }, 3000);\n}\n\nfunction asyncFunc2(callback) {\n    setTimeout(() => {\n        callback(2);\n    }, 2000);\n}\n\nfunction asyncFunc3(callback) {\n    setTimeout(() => {\n        callback(3);\n    }, 1000);\n}\n\nfunction asyncParallel(funcArray, finalCallback) {\n    const results = [];\n    let completedCount = 0;\n\n    funcArray.forEach((func, index) => {\n        func((result) => {\n            results[index] = result; // Lưu kết quả của hàm vào đúng vị trí trong mảng\n            completedCount++;\n\n            if (completedCount === funcArray.length) {\n                finalCallback(results); // Gọi callback trả về hết kết quả khi thực hiện xong tất cả các hàm\n            }\n        });\n    });\n}\n\nasyncParallel([asyncFunc1, asyncFunc2, asyncFunc3], (result) => {\n    console.log(result);\n    // 1, 2, 3 (prints results of each asynchronous function in order)\n    });"]}